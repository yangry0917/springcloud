---
spring:
  application:
    name: eureka-server
  profiles: peer1
server:
  port: 8000
eureka:
  instance:
    hostname: peer1
  client:
    #指定是否要注册到注册中心（
    #register-with-eureka: false
    #指定是否要从注册中心获取服务
    #fetch-registry: false
    serviceUrl:
      defaultZone: http://peer2:8001/eureka/,http://peer3:8002/eureka/
---
spring:
  application:
    name: eureka-server
  profiles: peer2
server:
  port: 8001
eureka:
  instance:
    hostname: peer2
  client:
    #指定是否要注册到注册中心（
    #register-with-eureka: false
    #指定是否要从注册中心获取服务
    #fetch-registry: false
    serviceUrl:
      defaultZone: http://peer1:8000/eureka/,http://peer3:8002/eureka/
---
spring:
  application:
    name: eureka-server
  profiles: peer3
server:
  port: 8002
eureka:
  instance:
    hostname: peer3
  client:
    #指定是否要注册到注册中心（
    #register-with-eureka: false
    #指定是否要从注册中心获取服务
    #fetch-registry: false
    serviceUrl:
      defaultZone: http://peer1:8000/eureka/,http://peer2:8001/eureka/


#---
#spring:
#  application:
#    name: spring-cloud-eureka
#  profiles: peer1
#server:
#  port: 8000
#eureka:
#  instance:
#    hostname: peer1
#  client:
#    serviceUrl:
#      defaultZone: http://peer2:8001/eureka/,http://peer3:8002/eureka/
#---
#spring:
#  application:
#    name: spring-cloud-eureka
#  profiles: peer2
#server:
#  port: 8001
#eureka:
#  instance:
#    hostname: peer2
#  client:
#    serviceUrl:
#      defaultZone: http://peer1:8000/eureka/,http://peer3:8002/eureka/
#---
#spring:
#  application:
#    name: spring-cloud-eureka
#  profiles: peer3
#server:
#  port: 8002
#eureka:
#  instance:
#    hostname: peer3
#  client:
#    serviceUrl:
#      defaultZone: http://peer1:8000/eureka/,http://peer2:8001/eureka/
 